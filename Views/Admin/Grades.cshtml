@model IEnumerable<SchoolManagementSystem.Models.Grade>

@{
    ViewData["Title"] = "Manage Grades";
    var studentId = ViewBag.StudentId;
}

<div class="container my-4">
    <div class="card shadow-sm">
        <div class="card-header bg-maroon text-white d-flex justify-content-between align-items-center">
            <h2 class="m-0">Manage Grades</h2>
            <a asp-action="CreateGrade" asp-route-studentId="@studentId" class="btn btn-light text-maroon fw-bold">➕ Add Grade</a>
        </div>

        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            else if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <!-- First Semester Section -->
            <div class="mb-2">
                <h3 class="text-maroon mb-3">First Semester</h3>
                <div class="table-responsive">
                    <table class="table table-striped align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>Subject</th>
                                <th>Subject Type</th>
                                <th>Quarter 1</th>
                                <th>Quarter 2</th>
                                <th>Final Grade</th>
                                <th>Teacher</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var grade in Model.Where(g => g.Semester == SchoolManagementSystem.Models.SemesterType.First))
                            {
                                var firstSemFinal = (int)Math.Round((grade.Quarter1 + grade.Quarter2).Value / 2.0, MidpointRounding.AwayFromZero);

                                <tr>
                                    <td>@grade.Subject</td>
                                    <td>@grade.SubjectType</td>
                                    <td>@grade.Quarter1</td>
                                    <td>@grade.Quarter2</td>
                                    <td class="text-success fw-bold">@firstSemFinal.ToString()</td>
                                    <td>@(grade.Teacher?.User != null ? $"{grade.Teacher.User.FirstName} {grade.Teacher.User.LastName}" : "Unknown")</td>
                                    <td>
                                        <div class="d-flex gap-2">
                                            <a asp-action="EditGrade" asp-route-id="@grade.Id" class="btn btn-sm btn-outline-primary">✏️ Edit</a>
                                            <form asp-action="DeleteGrade" asp-route-id="@grade.Id" method="post" onsubmit="return confirmDelete('@grade.Subject');">
                                                <button type="submit" class="btn btn-sm btn-outline-danger">🗑️ Delete</button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            @{
                                var firstSemGrades = Model.Where(g => g.Semester == SchoolManagementSystem.Models.SemesterType.First)
                                .Select(g => (g.Quarter1.HasValue && g.Quarter2.HasValue) ? (g.Quarter1 + g.Quarter2) / 2.0 : (double?)null)
                                .Where(g => g.HasValue);
                                var firstSemAverage = firstSemGrades.Any() ? (int)Math.Round(firstSemGrades.Average().Value, MidpointRounding.AwayFromZero) : (int?)null;
                            }
                            @if(firstSemGrades.Any())
                            {
                                <tr>
                                    <td colspan="4" class="fw-bold">General Average for the semester</td>
                                    <td class="text-success fw-bold">@(firstSemAverage.HasValue ? firstSemAverage.Value.ToString() : "N/A")</td>
                                    <td colspan="2"></td>
                                </tr>
                            }
                        </tfoot>
                    </table>
                </div>
            </div>

            <!-- Second Semester Section -->
            <div class="mb-2">
                <h3 class="text-maroon mb-3">Second Semester</h3>
                <div class="table-responsive">
                    <table class="table table-striped align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>Subject</th>
                                <th>Subject Type</th>
                                <th>Quarter 3</th>
                                <th>Quarter 4</th>
                                <th>Final Grade</th>
                                <th>Teacher</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var grade in Model.Where(g => g.Semester == SchoolManagementSystem.Models.SemesterType.Second))
                            {
                                var secondSemFinal = (int)Math.Round((grade.Quarter3 + grade.Quarter4).Value / 2.0, MidpointRounding.AwayFromZero);

                                <tr>
                                    <td>@grade.Subject</td>
                                    <td>@grade.SubjectType</td>
                                    <td>@grade.Quarter3</td>
                                    <td>@grade.Quarter4</td>
                                    <td class="text-success fw-bold">@secondSemFinal.ToString()</td>
                                    <td>@(grade.Teacher?.User != null ? $"{grade.Teacher.User.FirstName} {grade.Teacher.User.LastName}" : "Unknown")</td>
                                    <td>
                                        <div class="d-flex gap-2">
                                            <a asp-action="EditGrade" asp-route-id="@grade.Id" class="btn btn-sm btn-outline-primary">✏️ Edit</a>
                                            <form asp-action="DeleteGrade" asp-route-id="@grade.Id" method="post" onsubmit="return confirmDelete('@grade.Subject');">
                                                <button type="submit" class="btn btn-sm btn-outline-danger">🗑️ Delete</button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            @{
                                var secondSemGrades = Model.Where(g => g.Semester == SchoolManagementSystem.Models.SemesterType.Second)
                                .Select(g => (g.Quarter3.HasValue && g.Quarter4.HasValue) ? (g.Quarter3 + g.Quarter4) / 2.0 : (double?)null)
                                .Where(g => g.HasValue);
                                var secondSemAverage = secondSemGrades.Any() ? (int)Math.Round(secondSemGrades.Average().Value,  MidpointRounding.AwayFromZero) : (int?)null;
                            }
                            @if(secondSemGrades.Any())
                            {
                                <tr>
                                    <td colspan="4" class="fw-bold">General Average for the semester</td>
                                    <td class="text-success fw-bold">@(secondSemAverage.HasValue ? secondSemAverage.Value.ToString() : "N/A")</td>
                                    <td colspan="2"></td>
                                </tr>
                            }
                        </tfoot>
                    </table>
                </div>
            </div>

            <div class="d-flex justify-content-end">
                @if(Model.Any()){
                    <a asp-action="DownloadGrade" asp-route-studentId="@studentId" class="btn btn-light text-maroon fw-bold">📄 Download Grade Sheet</a>
                }
                <a asp-action="Students" class="btn btn-secondary ms-2">🏠 Back to Students</a>
            </div>
        </div>
    </div>
</div>

<script>
    function confirmDelete(subjectName) {
        return confirm(`Are you sure you want to delete the grade for ${subjectName}?`);
    }
</script>